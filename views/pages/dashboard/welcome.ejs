<div id="welcome">
    <account-notification-banner></account-notification-banner>
    <% if(!req.session.isAdmin) { %>
        <div class="container pt-5 pb-5" v-cloak>
            <h1>Bem-vindo, {{me.nome?me.nome:''}}!</h1>
            <hr/>
            <p>Essa é uma página que só <strong>clientes</strong> tem acesso!</p>
            <!-- <div class="buttons">
              <a class="btn btn-info" href="/account/profile">Atualizar e-mail</a>
            </div> -->
        </div>
    <% } else { %>
        <div class="container pt-5 pb-5" v-cloak>
            <h1>Bem-vindo, {{me.nome?me.nome:''}}!</h1>
            <hr/>
            <p>Essa é uma página que só <strong>administradores</strong> tem acesso!</p>
        </div>
        <div class="container d-flex">
            <div class="w-50" v-if="!cloudSuccessProd">
                <h3>Adicione um produto </h3>
                <p>Todos produtos estarão disponíveis para compra!</p>
                <div style="max-width: 450px;">
                    <hr/>
                    <ajax-form action="createProduto" :syncing.sync="syncingProd" :cloud-error.sync="cloudErrorProd"
                               :form-errors.sync="formErrorsProd" :form-data="formDataProd" :form-rules="formRulesProd"
                               @submitted="submittedFormProd()">
                        <div class="form-group">
                            <label for="descricaoProd">Descrição</label>
                            <input class="form-control" id="descricaoProd" name="descricaoProd" type="text"
                                   :class="[formErrorsProd.descricaoProd ? 'is-invalid' : '']"
                                   v-model.trim="formDataProd.descricaoProd" placeholder="Nome do produto"
                                   autocomplete="descricaoProd">
                            <div class="invalid-feedback" v-if="formErrorsProd.descricaoProd">Por favor digite o nome do
                                produto.
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="preco">Preço</label>
                            <input class="form-control" id="preco" v-model="formDataProd.preco" type="text">
                            <div class="invalid-feedback" v-if="formErrorsProd.preco">Por favor um preço válido</div>
                        </div>
                        <div class="form-group">
                            <label for="quantidade">Quantidade</label>
                            <input class="form-control" id="quantidade" v-model="formDataProd.quantidade" type="text">
                            <div class="invalid-feedback" v-if="formErrorsProd.quantidade">Por favor um quantidade
                                válida
                            </div>
                        </div>
                        <input class="form-control" id="fotoBase64" v-model="formDataProd.fotoBase64" type="hidden">
                        <div class="form-group">
                            <label for="foto">Foto</label>
                            <input class="form-control" id="foto" name="foto" type="file" accept="image/png, image/jpeg"
                                   onchange="onFotoInput()" required>
                        </div>
                        <div class="form-group">
                            <label for="categorias">Categorias</label>
                            <select id="categorias" class="custom-select" name="categorias"
                                    v-model="formDataProd.categorias" multiple>
                                <% categorias.forEach(function(categoria)  { %>
                                    <option value="<%= categoria.id %>"><%= categoria.descricao %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="form-group">
                            <ajax-button type="submit" :syncing="syncingProd" class="btn-dark btn-lg btn-block">
                                Adicionar
                            </ajax-button>
                        </div>
                    </ajax-form>
                </div>
            </div>
            <div class="w-50" v-if="!cloudSuccess">
                <h3>Crie uma categoria </h3>
                <p>Categorias podem ser vinculadas a produtos !</p>
                <div style="max-width: 450px;">
                    <hr/>
                    <ajax-form action="createCategoria" :syncing.sync="syncing" :cloud-error.sync="cloudError"
                               :form-errors.sync="formErrors" :form-data="formData" :form-rules="formRules"
                               @submitted="submittedForm()">
                        <div class="form-group">
                            <label for="nome">Descrição</label>
                            <input class="form-control" id="descricao" type="text"
                                   :class="[formErrors.descricao ? 'is-invalid' : '']"
                                   v-model.trim="formData.descricao" placeholder="Descrição da categoria"
                                   autocomplete="descricao">
                            <div class="invalid-feedback" v-if="formErrors.descricao">Por favor digite o nome da
                                categoria.
                            </div>
                        </div>
                        <div class="form-group">
                            <ajax-button type="submit" :syncing="syncing" class="btn-dark btn-lg btn-block">Criar
                            </ajax-button>
                        </div>
                    </ajax-form>
                </div>
            </div>
        </div>
        <div class="container pt-5">
            <h3>Produtos</h3>
            <p>Gerencie os produtos aqui.</p>
            <table class="table">
                <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Descrição</th>
                    <th scope="col">Preço</th>
                    <th scope="col">Quantidade</th>
                    <th scope="col">Categorias</th>
                </tr>
                </thead>
                <tbody>
                <% produtos.forEach(function(produto)  { %>
                    <tr>
                        <th scope="row"><%= produto.id %></th>
                        <td><%= produto.descricao %></td>
                        <td><%= produto.preco %></td>
                        <td><%= produto.quantidade %></td>
                        <td><%= produto.id %></td>
                    </tr>
                <% }) %>
                </tbody>
            </table>
        </div>
        <div class="container pt-5">
            <h3>Categorias</h3>
            <p>Gerencie as categorias aqui.</p>
            <table class="table">
                <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Descrição</th>
                </tr>
                </thead>
                <tbody>
                <% categorias.forEach(function(categoria)  { %>
                    <tr>
                        <th scope="row"><%= categoria.id %></th>
                        <td><%= categoria.descricao %></td>
                    </tr>
                <% }) %>
                </tbody>
            </table>
        </div>

    <% } %>
    <router-view></router-view>
</div>

<script>
    const toBase64 = file => new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = () => resolve(reader.result);
        reader.onerror = error => reject(error);
    });

    async function onFotoInput() {
        let v = await toBase64(document.querySelector('#foto').files[0])
        document.getElementById("fotoBase64").value = v;

        let event = new Event('input', {
            bubbles: true,
            cancelable: true,
        });

        document.getElementById("fotoBase64").dispatchEvent(event);
        console.log(document.getElementById("fotoBase64").value)
    }

</script>
<%- /* Expose locals as `window.SAILS_LOCALS` :: */ exposeLocalsToBrowser() %>
